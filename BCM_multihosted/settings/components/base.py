"""
Django settings for BCM_multihosted project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from datetime import datetime
from pathlib import Path

from django.utils.translation import gettext_lazy as _

from BCM_multihosted import version

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).parents[2]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jz^f*433lrcicup$^91#k*&fqcmu@j%i-m(+s(f)5jekoo4^0$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'activate.apps.ActivateConfig',
    'users.apps.UsersConfig',
    'prefixes.apps.PrefixesConfig',
    'audit.apps.AuditConfig',
    'products.apps.ProductsConfig',
    'BCM.apps.BcmConfig',
    'barcodes.apps.BarcodesConfig',
    'cloud.apps.CloudConfig',
    'excel.apps.ExcelConfig',
    'member_organisations.apps.MemberOrganisationsConfig',
    'company_organisations.apps.CompanyOrganisationsConfig',
    'api.apps.ApiConfig',
    'frontend.apps.FrontendConfig',

    'django_filters',
    'django_extensions',
    'rest_framework',
    # 'rest_framework.authtoken', either this or knox
    'knox',
    'rosetta',
    'raven.contrib.django.raven_compat',
    'admin_footer',
    'impersonate',
    'django_countries',  # used for countries i18n
    'countries_plus',
    'languages_plus',
    'inline_actions',
    'drf_yasg',
    'django_rq',
    'crequest',
    'oidc_rp',
    # 'rest_framework_cache'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'BCM.middleware.LanguageSwitcher',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'impersonate.middleware.ImpersonateMiddleware',

    # uncomment if you want to have tokens in templates
    # 'users.middleware.AuthTokenGenerateMiddleware',

    # global request object, should be placed after any authentication middlewares
    'crequest.middleware.CrequestMiddleware',
    'oidc_rp.middleware.OIDCRefreshIDTokenMiddleware',
]

ROOT_URLCONF = 'BCM_multihosted.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'BCM.context_processor.add_languages',
                'BCM.context_processor.global_settings',
                'core.context_processor',
                'oidc_rp.context_processors.oidc',
            ],
            'libraries': {
                'site_footer': 'BCM_multihosted.templatetags.footer',

            }
        },
    },
]

WSGI_APPLICATION = 'BCM_multihosted.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'default': {
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(lineno)d - %(message)s'
        },
    },
    'handlers': {
        'audit_db': {
            'level': 'NOTSET',
            'class': 'audit.log_handlers.audit_handler',
            'formatter': 'default',
        }
    },
    'loggers': {
        'audit': {
            'handlers': ['audit_db'],
            'level': 'INFO',
            'propagate': False
        },
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',),
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'description': "Authorization: Token {your-token-here}",
            'in': 'header',
        }
    }
}

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('en', _('English')),  # it seems should be at the first place for model translations
    ('de', _('German')),
    ('fr', _('French')),
    ('it', _('Italian')),
    ('nl', _('Dutch')),
    ('sv', _('Swedish')),
    ('bs', _('Bosnian')),
    ('es', _('Spanish')),
    ('cs', _('Czech'))
]
FALLBACK_LANGUAGES = {
    'en': ('de', 'fr', 'it', 'nl', 'sv', 'se', 'ru', 'bs', 'es', 'cs'),
}

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'media'),
    os.path.join(BASE_DIR, 'frontend/static'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
BIN_DIR = os.path.join(BASE_DIR, 'bin')
PRODUCT_IMAGE_DIR = os.path.join(MEDIA_ROOT, 'product_images')

# GS1 Specific
GS1_PREFIX_START_REGEX = "^539|^501|^509|^0\d\d"
GS1_GLN_CAPABILITY = False
GS1_GEPIR_EXPORT_NAME = 'GS1 Ireland'

TERMS_VERSION = '2018/06/04'

PREFIXES_EXCEL_TEMPLATE = os.path.join(BASE_DIR, 'templates/excel/GDSN_Template_v4.xlsx')
GDSN_EXCEL_TEMPLATE = os.path.join(BASE_DIR, 'templates/excel/GDSN_Template_v4.xlsx')
APPEND_AFTER_LINE_GDSN = 4
STARTING_COLUMN_GDSN = 0

NO_IMAGE = '/static/site/img/no-image.gif'  # Image to show when product has no image
PRODUCTS_PER_PAGE = 10
BASE_PACKAGE_LEVEL = 70  # TODO: remove

BARCODES_URL = 'bcgen'
BARCODES_FILES_PATH = os.path.join(BASE_DIR, 'media', BARCODES_URL)
BARCODES_PREVIEW_EXT = 'jpg'
BARCODES_PREVIEW_RES = '96'
BARCODES_OVERLAY_IMAGE = None
BARCODES_GENERATE_RES = 300
BIN_CONVERT = '/usr/local/bin/convert'
BIN_COMPOSITE = '/usr/local/bin/composite'

EXTERNAL_APIS = {
    'GPC': {
        'USE_CACHE': False,
        'DEFAULT_CACHE_TIMEOUT': 60 * 60 * 24,  # 24 hours
        'USER': os.getenv("GPC_USER"),
        'PASSWORD': os.getenv("GPC_PASSWORD")
    }
}

# Admin footer

ADMIN_FOOTER_DATA = {
    'site_url': 'https://www.gs1.org',
    'site_name': 'GS1 Activate',
    'period': '{}'.format(datetime.now().year),
    'version': '{}'.format(version)
}

# Rosetta Settings

ROSETTA_AUTO_COMPILE = True
ROSETTA_MESSAGES_PER_PAGE = 10
# ROSETTA_ENABLE_TRANSLATION_SUGGESTIONS = True
ROSETTA_SHOW_AT_ADMIN_PANEL = True
ROSETTA_EXCLUDED_APPLICATIONS = (
    'member_organisations',
    'rest_framework_cache',
)
ROSETTA_WSGI_AUTO_RELOAD = False
ROSETTA_UWSGI_AUTO_RELOAD = False

# Django impersonate

IMPERSONATE = {
    'REDIRECT_URL': '/profile/',
    'PAGINATE_COUNT': 10,

    # custom permissions check to be allowed to impersonate
    'CUSTOM_ALLOW': 'member_organisations.custom_admin.impersonate.is_impersonation_allowed',
    # redirect back to an initial impersonation page
    'USE_HTTP_REFERER': True,
}

ANONYMOUS_LOGIN_ALLOWED = True

DATE_TERMS = '2018/06/04'
DATE_TERMS_CLOUD = '2018/06/04'

#
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'oidc_gs1.backends.OIDCAuthBackend',
)

BRICK = {
    'en': 'https://wsup.gs1.org/api/GPC/Bricks?brick=',
    'sv': 'https://wsup.gs1.org/api/GPC/Bricks?language=sv&brick=',
    'cs': 'https://wsup.gs1.org/api/GPC/Bricks?language=cz&brick=',
    'es': 'https://wsup.gs1.org/api/GPC/Bricks?language=es&brick=',
}
BRICK_CODE = {
    'en': 'https://wsup.gs1.org/api/GPC/BricksByCode?brickCode=',
    'sv': 'https://wsup.gs1.org/api/GPC/BricksByCode?language=sv&brickCode=',
    'cs': 'https://wsup.gs1.org/api/GPC/BricksByCode?language=cz&brickCode=',
    'es': 'https://wsup.gs1.org/api/GPC/BricksByCode?language=es&brickCode=',
}

# OIDC - common

OIDC_RP_CLIENT_ID = os.getenv("OIDC_RP_CLIENT_ID")  # 'ActivateLocalhost01'
OIDC_RP_CLIENT_SECRET = os.getenv("OIDC_RP_CLIENT_SECRET")  # '4d5eaa84ed674b198951488a029c706e'
OIDC_RP_SCOPES = "openid profile"
OIDC_RP_USER_DETAILS_HANDLER = "oidc_gs1.handlers.login_handler"
OIDC_RP_AUTHENTICATION_REDIRECT_URI = "/sso_redirect"
OIDC_RP_AUTHENTICATION_FAILURE_REDIRECT_URI = "/sso_failure"

# print(OIDC_RP_CLIENT_ID)
